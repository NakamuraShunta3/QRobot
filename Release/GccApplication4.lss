
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000156  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000004  00800100  00800100  000001ca  2**0
                  ALLOC
  2 .comment      00000030  00000000  00000000  000001ca  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e5       	ldi	r30, 0x56	; 86
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 30       	cpi	r26, 0x04	; 4
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 5b 00 	call	0xb6	; 0xb6 <main>
  9e:	0c 94 a9 00 	jmp	0x152	; 0x152 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <init>:
  a6:	0e 94 60 00 	call	0xc0	; 0xc0 <wait_10us_init>
  aa:	0e 94 93 00 	call	0x126	; 0x126 <USART_Init>
  ae:	0e 94 9f 00 	call	0x13e	; 0x13e <Vs_rcv_init>
  b2:	78 94       	sei
  b4:	08 95       	ret

000000b6 <main>:
  b6:	0e 94 53 00 	call	0xa6	; 0xa6 <init>
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	08 95       	ret

000000c0 <wait_10us_init>:
  c0:	10 92 80 00 	sts	0x0080, r1
  c4:	89 e0       	ldi	r24, 0x09	; 9
  c6:	80 93 81 00 	sts	0x0081, r24
  ca:	10 92 89 00 	sts	0x0089, r1
  ce:	80 ea       	ldi	r24, 0xA0	; 160
  d0:	80 93 88 00 	sts	0x0088, r24
  d4:	82 e0       	ldi	r24, 0x02	; 2
  d6:	80 93 6f 00 	sts	0x006F, r24
  da:	08 95       	ret

000000dc <__vector_11>:
  dc:	1f 92       	push	r1
  de:	0f 92       	push	r0
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	0f 92       	push	r0
  e4:	11 24       	eor	r1, r1
  e6:	8f 93       	push	r24
  e8:	9f 93       	push	r25
  ea:	af 93       	push	r26
  ec:	bf 93       	push	r27
  ee:	80 91 00 01 	lds	r24, 0x0100
  f2:	90 91 01 01 	lds	r25, 0x0101
  f6:	a0 91 02 01 	lds	r26, 0x0102
  fa:	b0 91 03 01 	lds	r27, 0x0103
  fe:	01 96       	adiw	r24, 0x01	; 1
 100:	a1 1d       	adc	r26, r1
 102:	b1 1d       	adc	r27, r1
 104:	80 93 00 01 	sts	0x0100, r24
 108:	90 93 01 01 	sts	0x0101, r25
 10c:	a0 93 02 01 	sts	0x0102, r26
 110:	b0 93 03 01 	sts	0x0103, r27
 114:	bf 91       	pop	r27
 116:	af 91       	pop	r26
 118:	9f 91       	pop	r25
 11a:	8f 91       	pop	r24
 11c:	0f 90       	pop	r0
 11e:	0f be       	out	0x3f, r0	; 63
 120:	0f 90       	pop	r0
 122:	1f 90       	pop	r1
 124:	18 95       	reti

00000126 <USART_Init>:
 126:	10 92 c5 00 	sts	0x00C5, r1
 12a:	89 e1       	ldi	r24, 0x19	; 25
 12c:	80 93 c4 00 	sts	0x00C4, r24
 130:	e1 ec       	ldi	r30, 0xC1	; 193
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	8e e0       	ldi	r24, 0x0E	; 14
 136:	80 83       	st	Z, r24
 138:	88 e1       	ldi	r24, 0x18	; 24
 13a:	80 83       	st	Z, r24
 13c:	08 95       	ret

0000013e <Vs_rcv_init>:
 13e:	1c bc       	out	0x2c, r1	; 44
 140:	80 e7       	ldi	r24, 0x70	; 112
 142:	8c bd       	out	0x2c, r24	; 44
 144:	8c b5       	in	r24, 0x2c	; 44
 146:	8f 60       	ori	r24, 0x0F	; 15
 148:	8c bd       	out	0x2c, r24	; 44
 14a:	8c e2       	ldi	r24, 0x2C	; 44
 14c:	84 b9       	out	0x04, r24	; 4
 14e:	2c 9a       	sbi	0x05, 4	; 5
 150:	08 95       	ret

00000152 <_exit>:
 152:	f8 94       	cli

00000154 <__stop_program>:
 154:	ff cf       	rjmp	.-2      	; 0x154 <__stop_program>
